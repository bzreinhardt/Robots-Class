% figure(11); TestFunHW3(HW3map,measurements,[10,10])
% figure(12); TestFunHW3(HW3map,measurements,[40,22])

x_max = max([HW3map(:,1);HW3map(:,3)]);max([HW3map(:,1);HW3map(:,3)]);
x_min = min([HW3map(:,1);HW3map(:,3)]);max([HW3map(:,1);HW3map(:,3)]);
y_max = max([HW3map(:,2);HW3map(:,4)]);max([HW3map(:,2);HW3map(:,4)]);
y_min = min([HW3map(:,2);HW3map(:,4)]);max([HW3map(:,2);HW3map(:,4)]);
mu0_1 = [(x_max-x_min)/2; (y_max-y_min)/2];
sigma0_1 = [((x_max-x_min)/2)^2 0; 0 ((y_max-y_min)/2)^2];
[mu, sigma] = KFStationary(HW3map, measurements, mu0_1, sigma0_1);
 
figure(13); 
subplot(211);
plotKalmanPdf(mu0_1,sigma0_1,HW3map); 
title(['Initial distribution \Mu = ' num2str(mu0_1') ' var(x) =' num2str(sigma0_1(1,1))...
    ' var(y) = ' num2str(sigma0_1(2,2))]);
subplot(212)
plotKalmanPdf(mu,sigma,HW3map); 
title('Final Distribution')

mu0_2 = [14; 4];
sigma0_2 = [((x_max-x_min)/2)^2 0; 0 ((y_max-y_min)/2)^2];
[mu, sigma] = KFStationary(HW3map, measurements, mu0_1, sigma0_1);
 
figure(13); 
subplot(211);
plotKalmanPdf(mu0_1,sigma0_1,HW3map); 
title(['Initial distribution \Mu = ' num2str(mu0_1') ' var(x) =' num2str(sigma0_1(1,1))...
    ' var(y) = ' num2str(sigma0_1(2,2))]);
subplot(212)
plotKalmanPdf(mu,sigma,HW3map); 
title('Final Distribution')



% measurements = dlmread('stationary.txt','\t');
% gridSize = [10,10];
% [ pdf0,X,Y ] = makeGridMap(HW3map, gridSize);
% figure(1);clf; plotPdf(X,Y,pdf0,HW3map);
% pdfNew = gridLocalizationStationary(HW3map, measurements, gridSize);
% figure(2);clf; plotPdf(X,Y,pdfNew,HW3map);
% 
% gridSize2 = [40,22];
% [ pdf0_2,X_2,Y_2 ] = makeGridMap(HW3map, gridSize2);
% figure(4);clf; plotPdf(X_2,Y_2,pdf0_2,HW3map);
% pdfNew_2 = gridLocalizationStationary(HW3map, measurements, gridSize2);
% figure(5);clf; plotPdf(X_2,Y_2,pdfNew_2,HW3map);
% 
% 
% 
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% % Estimated Sonar measurements part.
% truthPose = noisySonarData.truthPose;
% sonarData = noisySonarData.sonar;
% 
% map = [2.009 -4.910 2.009 4.850];
% robotRad = 0.13;
% angles = [-pi/2, 0, pi/2];
% maxRange = 3;
% 
% %sonarData(isnan(sonarData)) = 3;
% clear expectedMeasurements;
% for i = 1:length(truthPose(:,1))
%     expectedMeasurements(i,:) = sonarPredict(truthPose(i,2:4)',map,robotRad,...
%         angles,maxRange);
% end
% 
% 
% figure(3);clf;
% 
% plot(expectedMeasurements);
% hold on
% plot(sonarData(:,2:4),'--');
% hold off
% legend('R_{exp}', 'F_{exp}', 'L_{exp}','R_{meas}','F_{meas}','L_{meas}')
% xlabel('time - arbitrary units'); ylabel('sonar distance (m)');
% title('Expected and Measured Sonar Measurements');
% % subplot(221)
% % plot(expectedMeasurements(:,1)
% % subplot(222)
